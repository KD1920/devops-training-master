version: 0.2

env:
  variables:
    ARTIFACT_BUCKET: my-s3-gen-bucket

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Installing dependencies..."
      - pip install --upgrade awscli

  pre_build:
    commands:
      - echo "Validating CloudFormation templates..."
      - aws cloudformation validate-template --template-body file://cloudformation/main.yml
      - aws cloudformation validate-template --template-body file://cloudformation/roles.yml
      - aws cloudformation validate-template --template-body file://cloudformation/lambda-deploy.yml || echo "lambda-deploy.yml not required"

  build:
    commands:
      - echo "Packaging Lambda function..."
      - cd lambda
      - zip -r ../lambda_package.zip .
      - cd ..
      - echo "Deploying CloudFormation stack..."
      - aws cloudformation package \
          --template-file cloudformation/lambda-deploy.yml \
          --s3-bucket $ARTIFACT_BUCKET \
          --output-template-file cloudformation/lambda-deploy-packaged.yml
      - aws cloudformation deploy \
          --template-file cloudformation/main.yml \
          --stack-name MyApp-Main \
          --capabilities CAPABILITY_NAMED_IAM
      - aws cloudformation deploy \
          --template-file cloudformation/roles.yml \
          --stack-name MyApp-Roles \
          --capabilities CAPABILITY_NAMED_IAM
      - if [ -f cloudformation/lambda-deploy.yml ]; then \
            aws cloudformation deploy \
              --template-file cloudformation/lambda-deploy-packaged.yml \
              --stack-name MyApp-Lambda \
              --capabilities CAPABILITY_NAMED_IAM; \
        fi

  post_build:
    commands:
      - echo "Build and deployment complete."

artifacts:
  files:
    - lambda_package.zip
    - cloudformation/*.yml